#!/usr/bin/env node

'use strict';

var http = require('http'),
    fs = require('fs'),
    process = require('child_process'),
    config = require('nconf');

config.argv().defaults({
    'port': 40480,
    'docroot': '/data/www/docroot',
    'requirejs': '/usr/bin/r.js'
});

console.log('Small and Crunchy Minifying Content Server', 'Configuration', config);
http.createServer(function(request, response) {
  var command = config.get('requirejs') + ' -o out=stdout logLevel=4 baseUrl=' + config.get('docroot') + ' name=';

  if (~request.url.search(/\.(js|css)$/)) {
    if (~request.url.search(/\.min\.(js|css)$/)) {
      request.url = request.url.replace(/\.min/, '');

      fs.exists(config.get('docroot') + request.url, function (exists) {
        if (exists) {
          command = command + request.url.replace(/^\//, '').replace(/\.(js|css)$/, '');
          process.exec(command, function(error, stdout, stderr) {
            if (error) {
              response.writeHead(501);
              response.end('I\'d like to do that, but I don\'t seem to be able to.');
              console.log(command, stderr, error);
            } else {
              var content_type = 'text/plain';
              if (~request.url.search(/\.js$/)) {
                content_type = 'application/javascript';
              } else if (~request.url.search(/\.css$/)) {
                content_type = 'text/css';
              }
              response.writeHead(200, { 'Content-Type': content_type });
              response.end(stdout);
            }
          });
        } else {
          response.writeHead(404);
          response.end('I don\'t have a thing like that. Go Fish.');
        }
      });
    } else {
      response.writeHead(403);
      response.end('I know what that is, but you don\'t need my help to get things like that.');
    }
  } else {
    if (~request.url.search(/^\/$/)) {
      response.writeHead(418);
      response.end('How Zen.');
    } else {
      response.writeHead(415);
      response.end('What is this "' + request.url.match(/\.(.*)$/)[1] + '" thing you ask for?');
    }
  }
}).listen(config.get('port'));
